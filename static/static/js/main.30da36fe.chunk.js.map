{"version":3,"sources":["logo.svg","components/ContactsFetcher.js","svg/logo_vertical.svg","svg/info.svg","components/LogoBar.js","components/TabListItem.js","components/TabList.js","svg/search_selected.svg","components/NavBar.js","svg/chevron-right.svg","components/ContactListItem.js","svg/loader.svg","components/ContactList.js","svg/chevron-left.svg","svg/phone-classic.svg","svg/phone.svg","svg/email.svg","svg/person.svg","svg/age.svg","svg/dob.svg","svg/location.svg","svg/share_contact.svg","components/ContactInfo.js","svg/close.svg","components/Search.js","svg/logo_splash.svg","svg/loader_splash.svg","components/SplashScreen.js","svg/account-alert.svg","components/ContactListEmptyState.js","components/Info.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["ContactFetcher","state","serverResponse","fetchContacts","bind","processContacts","packContacts","a","queryUrl","Configuration","userUrl","fullQuery","numberCards","toString","axios","get","then","response","data","results","catch","error","this","contacts","sort","b","compareLastNames","name","last","sortedContacts","packedContacts","tabs","forEach","tab","contact","toLowerCase","push","splice","length","React","Component","LogoBar","className","onClick","props","onInfoButtonClick","src","Info","VerticalLogo","TabListItem","isSelected","unselectTab","selectTab","tabText","setState","onclick","TabList","unselectTabs","map","ref","createRef","selectedTab","onLetterSelect","current","toUpperCase","NavBar","selectedLetter","contactCount","undefined","letter","showSearch","SearchSelected","ContactListItem","isMounted","onClickEventHandler","index","setTimeout","CSSTransition","in","apper","timeout","classNames","unmountOnExit","contactPhoto","firstName","lastName","ChevronRight","ContactList","contactsList","contactsLoaded","receiveContacts","console","log","Loader","idx","onContactClicked","picture","medium","first","ContactInfo","showContactInfo","contactImage","closeContactInfo","shareContact","convertImageToBase64","createShareLink","callContact","window","open","phone","hideContactInfo","vCard","require","vCardsJS","photo","embedFromString","workPhone","birthday","Date","dob","email","homeAddress","street","number","city","postCode","country","vCardData","uri","getFormattedString","downloadLink","document","createElement","href","download","body","appendChild","click","removeChild","imageToBase64","base64Photo","ChevronLeft","style","ShareContact","Call","Phone","Email","Person","gender","Age","age","DateOfBirth","Location","registrationDate","Search","clearList","passClickedSearchResult","closeSearch","result","Letter","Index","onHideSearch","Close","SearchIcon","type","placeholder","onChange","onSearch","foundContacts","Contact","SplashScreen","contentExit","LogoSplash","ContactListEmptyState","NoContactFound","closeInfo","hideInfo","InfoIcon","Main","selectedPersonPhoto","selectedPersonFirstName","selectedPersonLastName","selectedPersonPhoneNumber","selectedPersonPhoneEmail","selectedPersonGender","selectedPersonAge","selectedPersonDOB","selectedPersonStreet","selectedPersonNumber","selectedPersonCity","selectedPersonState","selectedPersonPostCode","selectedPersonCountry","selectedPersonRegistrationDate","searchResults","hideSplashScreen","showEmptyState","showInfo","setSelectedLetter","performSearch","showSearchResult","finishSplashScreen","hideEmptyState","person","large","date","split","location","postcode","registered","e","contactList","contactsFound","Object","entries","lastNameMatch","stringSimilarity","compareTwoStrings","target","value","firstNameMatch","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.30da36fe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport axios from \"axios\";\r\nimport Configuration from './configuration.json'\r\n\r\nclass ContactFetcher extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            serverResponse: null,\r\n        }\r\n        this.fetchContacts = this.fetchContacts.bind(this);\r\n        this.processContacts = this.processContacts.bind(this);\r\n        this.packContacts = this.packContacts.bind(this);\r\n    }\r\n    async fetchContacts() {\r\n        let queryUrl = Configuration.userUrl + \"/api/?nat=au,br,ca,ch,de,dk,es,fi,fr,gb,ie,nl,nz,us&results=\";\r\n        let fullQuery = queryUrl + Configuration.numberCards.toString();\r\n        await axios.get(fullQuery).then((response) => {this.state.serverResponse = this.processContacts(response.data.results)}).catch((error) => {this.state.serverResponse = error});\r\n        return this.state.serverResponse;\r\n    }\r\n    processContacts(contacts) {    \r\n        return this.packContacts(contacts.sort(function(a, b) {\r\n            function compareLastNames(a, b) {           \r\n                return (a < b) ? -1 : (a > b) ? 1 : 0;\r\n            }\r\n            return compareLastNames(a.name.last, b.name.last);\r\n        }));\r\n    }\r\n    packContacts(sortedContacts) {\r\n        let packedContacts = [];\r\n        Configuration.tabs.forEach((tab) => {\r\n            packedContacts[tab] = []\r\n            sortedContacts.forEach((contact) => {\r\n                if(contact.name.last.toLowerCase()[0] === tab) {\r\n                    packedContacts[tab].push(contact)\r\n                }\r\n            });\r\n            sortedContacts.splice(0,packedContacts[tab].length)\r\n        });\r\n        return packedContacts;\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default ContactFetcher;","export default __webpack_public_path__ + \"static/media/logo_vertical.cc9f62be.svg\";","export default __webpack_public_path__ + \"static/media/info.bd4c8878.svg\";","import React from 'react';\r\nimport './LogoBar.css';\r\nimport VerticalLogo from '../svg/logo_vertical.svg'\r\nimport Info from '../svg/info.svg';\r\n\r\nclass LogoBar extends React.Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        return(\r\n            <div className='logo-bar-container'>\r\n                <div className='logo-bar-button-container' onClick={this.props.onInfoButtonClick}><img src={Info} /></div>\r\n                <img src={VerticalLogo} className='vertical-logo'/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogoBar;","import React from 'react';\r\nimport './TabListItem.css';\r\n\r\nclass TabListItem extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isSelected: false,\r\n        }\r\n        this.unselectTab = this.unselectTab.bind(this);\r\n        this.selectTab = this.selectTab.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.tabText == 'A') {\r\n            this.selectTab();\r\n        }\r\n    }\r\n    unselectTab() {\r\n        this.setState({isSelected: false})\r\n    }\r\n    selectTab() {\r\n        this.setState({isSelected: true})\r\n    }\r\n    render() {\r\n        return(\r\n            <div className='tab-list-item' onClick={() => {this.props.onclick(this.props.tabText); this.selectTab()}}>\r\n                <div className={this.state.isSelected ? 'tab-list-item-ring-selected' : 'tab-list-item-ring'}></div>\r\n                <h1 className={this.state.isSelected ? 'tab-list-item-h1-selected' : 'tab-list-item-h1-unselected'}>{this.props.tabText}</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TabListItem;","import React from 'react';\r\nimport './TabList.css';\r\nimport TabListItem from './TabListItem';\r\nimport Configuration from './configuration.json'\r\n\r\nclass TabList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.unselectTabs = this.unselectTabs.bind(this);\r\n        this.tabs = []\r\n        Configuration.tabs.map((tab) => {\r\n            this.tabs.push({tabText: tab, ref: React.createRef()});\r\n        });\r\n    }\r\n    unselectTabs(selectedTab) {\r\n        this.props.onLetterSelect(selectedTab);\r\n        this.tabs.map((tab) => {\r\n            tab.ref.current.unselectTab();\r\n        });\r\n    }\r\n    render() {\r\n        return(\r\n            <div className='tab-list-container'>\r\n                <div className='top-gradient'></div>\r\n                    { this.tabs.map((tab) => { return <TabListItem ref={tab.ref} tabText={tab.tabText.toUpperCase()} onclick={this.unselectTabs.bind(this)}/>}) }\r\n                <div className='bottom-gradient'></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TabList;","export default __webpack_public_path__ + \"static/media/search_selected.fa9c8156.svg\";","import React from 'react';\r\nimport './NavBar.css';\r\nimport SearchSelected from '../svg/search_selected.svg';\r\n\r\nclass NavBar extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selectedLetter: \"\",\r\n            contactCount: undefined,\r\n        };\r\n    }\r\n    setSelectedLetter(letter, contacts) {\r\n        this.setState({selectedLetter: letter.toUpperCase()+letter.toLowerCase()})\r\n        this.setState({contactCount: contacts})\r\n    }\r\n    render() {\r\n        return(\r\n            <div className='nav-bar-container'>\r\n                <div className='nav-bar-selected-character'>{this.state.selectedLetter}</div>\r\n                <div className='nav-bar-contact-counter'>{this.state.contactCount}</div>\r\n                <div className='nav-bat-button-container' onClick={this.props.showSearch}><img src={SearchSelected} /></div>\r\n                <div className='separation-bar'></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/chevron-right.5390ea80.svg\";","import React from 'react';\r\nimport './ContactListItem.css';\r\nimport ChevronRight from '../svg/chevron-right.svg';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nclass ContactListItem extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isMounted: false,\r\n        }\r\n        this.onClickEventHandler = this.onClickEventHandler.bind(this);\r\n    }\r\n    onClickEventHandler() {\r\n        this.props.onClick(this.props.index)\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.setState({isMounted: true})\r\n        }, 100);\r\n    }\r\n    render() {\r\n        return(\r\n            <CSSTransition in={this.state.isMounted}\r\n                apper={true}\r\n                timeout={800}\r\n                classNames='contact-list-item-animation'\r\n                unmountOnExit\r\n            >\r\n                <div className='contact-list-item-container' onClick={this.onClickEventHandler}>\r\n                    <div className='contact-list-item-container-user-photo-container'>\r\n                        <img src={this.props.contactPhoto} />\r\n                    </div>\r\n                    <div className='contact-list-item-user-name'><p>{this.props.firstName}</p><p>{this.props.lastName}</p></div>\r\n                    <div className='contact-list-item-container-chevron-container'>\r\n                        <img src={ChevronRight} />\r\n                    </div>\r\n                    <div className='divider'></div>\r\n                </div>\r\n            </CSSTransition>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactListItem;","export default __webpack_public_path__ + \"static/media/loader.c5aba0fa.svg\";","import React from 'react';\r\nimport './ContactList.css';\r\nimport ContactListItem from './ContactListItem';\r\nimport Loader from '../svg/loader.svg';\r\n\r\nclass ContactList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            contactsList: [],\r\n            contactsLoaded: false,\r\n        }\r\n        this.receiveContacts = this.receiveContacts.bind(this);\r\n    }\r\n    receiveContacts(contacts) {\r\n        console.log(contacts)\r\n        this.setState({contactsLoaded: false});\r\n        this.setState({contactsList: []});\r\n        setTimeout(() => {\r\n            this.setState({contactsList: contacts});\r\n            this.setState({contactsLoaded: true});\r\n        }, 800);\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className='contact-list-top-gradient'></div>\r\n                <img src={Loader} className={this.state.contactsLoaded ? 'loader loader-fade' : 'loader'}/>\r\n                <div className='contact-list-container'>\r\n                    { this.state.contactsList.map((contact, idx) => { return <ContactListItem onClick={this.props.onContactClicked} index={idx} contactPhoto={contact.picture.medium} firstName={contact.name.first} lastName={contact.name.last}/>}) }\r\n                </div>\r\n                <div className='contact-list-bottom-gradient'></div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactList;","export default __webpack_public_path__ + \"static/media/chevron-left.c7c5682c.svg\";","export default __webpack_public_path__ + \"static/media/phone-classic.6b1139f0.svg\";","export default __webpack_public_path__ + \"static/media/phone.9774a2d5.svg\";","export default __webpack_public_path__ + \"static/media/email.30b849c3.svg\";","export default __webpack_public_path__ + \"static/media/person.c2afbeec.svg\";","export default __webpack_public_path__ + \"static/media/age.d38a42d7.svg\";","export default __webpack_public_path__ + \"static/media/dob.565ef536.svg\";","export default __webpack_public_path__ + \"static/media/location.2a13b3b4.svg\";","export default __webpack_public_path__ + \"static/media/share_contact.5957181d.svg\";","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './ContactInfo.css';\r\nimport ChevronLeft from '../svg/chevron-left.svg';\r\nimport Phone from '../svg/phone-classic.svg';\r\nimport Call from '../svg/phone.svg';\r\nimport Email from '../svg/email.svg';\r\nimport Person from '../svg/person.svg';\r\nimport Age from '../svg/age.svg'\r\nimport DateOfBirth from '../svg/dob.svg';\r\nimport Location from '../svg/location.svg'\r\nimport ShareContact from '../svg/share_contact.svg';\r\n\r\nclass ContactInfo extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showContactInfo: false,\r\n            contactPhoto: null\r\n\r\n        }\r\n        this.contactImage = React.createRef();\r\n        this.closeContactInfo = this.closeContactInfo.bind(this);\r\n        this.shareContact = this.shareContact.bind(this);\r\n        this.convertImageToBase64 = this.convertImageToBase64.bind(this);\r\n        this.createShareLink = this.createShareLink.bind(this);\r\n        this.callContact = this.callContact.bind(this);\r\n    }\r\n    callContact() {\r\n        window.open('tel:' + this.props.phone);\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.setState({showContactInfo: true});\r\n            this.convertImageToBase64();\r\n        }, 300);\r\n        \r\n    }\r\n    closeContactInfo() {\r\n        this.setState({showContactInfo: false});\r\n        this.props.hideContactInfo();\r\n    }\r\n    shareContact() {\r\n        let vCardsJS = require('vcards-js');\r\n        let vCard = vCardsJS();\r\n        vCard.firstName = this.props.firstName;\r\n        vCard.lastName = this.props.lastName;\r\n        vCard.photo.embedFromString(this.state.contactPhoto, 'JPEG');\r\n        vCard.workPhone = this.props.phone;\r\n        vCard.birthday = new Date(this.props.dob);\r\n        vCard.email = this.props.email\r\n        vCard.homeAddress = this.props.street + \" \" + this.props.number + \" \" + this.props.city + \" \" + this.props.state + \" \" + this.props.postCode + \" \" + this.props.country;\r\n        this.createShareLink(vCard);\r\n    }\r\n    createShareLink(vCardData) {\r\n        var str = vCardData.getFormattedString();\r\n        var uri = 'data:text/x-vcard;urlencoded,' + str;\r\n        var downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = uri;\r\n        downloadLink.download = this.props.firstName + \"_\" + this.props.lastName + \".vcf\";\r\n        document.body.appendChild(downloadLink);\r\n        downloadLink.click();\r\n        document.body.removeChild(downloadLink);\r\n    }\r\n    convertImageToBase64() {\r\n        let imageToBase64 = require('image-to-base64');\r\n        imageToBase64(this.props.picture)\r\n            .then(\r\n                (base64Photo) => {\r\n                    this.setState({contactPhoto: base64Photo})\r\n                }\r\n            )\r\n            .catch(\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            )\r\n    }\r\n    render() {\r\n        return (\r\n            <CSSTransition in={this.state.showContactInfo}\r\n                apper={true}\r\n                timeout={800}\r\n                classNames='contact-info-animation'\r\n                unmountOnExit\r\n            >\r\n                <div className='contact-info-container'>\r\n                    <div className='contact-info-nav-bar'>\r\n                        <div className='back-button-container' onClick={this.closeContactInfo}><img src={ChevronLeft} /></div>\r\n                        <div className='back-button-container' style={{\"float\": \"right\"}} onClick={this.shareContact}><img src={ShareContact} /></div>\r\n                        <div className='back-button-container' style={{\"float\": \"right\"}} onClick={this.callContact}><img src={Call} /></div>\r\n                        <div className='contact-foto-and-name-container'>\r\n                            <div className='contact-info-foto-container '><img ref={this.contactImage} src={this.props.picture} /></div>\r\n                            <div className='contact-info-item-user-name'><p>{this.props.firstName}</p><p>{this.props.lastName}</p></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='contact-info-data-container'>\r\n                        <div className='contact-info-secion-title contact-title-enter'>Contact</div>\r\n                        <div className='contact-info-item-container phone-number-enter'>\r\n                            <div className='back-button-container' style={{\"height\": \"50pt\"}}><img src={Phone} /></div>\r\n                            <div className='contact-info-item-title'>Phone number</div>\r\n                            <div className='contact-info-item-value'>{this.props.phone}</div>\r\n                            <div className='contact-info-item-divider'></div>\r\n                        </div>\r\n                        <div className='contact-info-item-container email-number-enter'>\r\n                            <div className='back-button-container' style={{\"height\": \"50pt\"}}><img src={Email} /></div>\r\n                            <div className='contact-info-item-title'>Email</div>\r\n                            <div className='contact-info-item-value'>{this.props.email}</div>\r\n                            <div className='contact-info-item-divider'></div>\r\n                        </div>\r\n                        <div className='contact-info-secion-title personal-enter'>Personal information</div>\r\n                        <div className='contact-info-item-container gender-enter'>\r\n                            <div className='back-button-container' style={{\"height\": \"50pt\"}}><img src={Person} /></div>\r\n                            <div className='contact-info-item-title'>Gender</div>\r\n                            <div className='contact-info-item-value'>{this.props.gender}</div>\r\n                            <div className='contact-info-item-divider'></div>\r\n                        </div>\r\n                        <div className='contact-info-item-container age-enter'>\r\n                            <div className='back-button-container' style={{\"height\": \"50pt\"}}><img src={Age} /></div>\r\n                            <div className='contact-info-item-title'>Age</div>\r\n                            <div className='contact-info-item-value'>{this.props.age}</div>\r\n                            <div className='contact-info-item-divider'></div>\r\n                        </div>\r\n                        <div className='contact-info-item-container dob-enter'>\r\n                            <div className='back-button-container' style={{\"height\": \"50pt\"}}><img src={DateOfBirth} /></div>\r\n                            <div className='contact-info-item-title'>Date of birth</div>\r\n                            <div className='contact-info-item-value'>{this.props.dob}</div>\r\n                            <div className='contact-info-item-divider'></div>\r\n                        </div>\r\n                        <div className='contact-info-secion-title location-enter'>Address</div>\r\n                        <div className='contact-info-item-container address-enter'>\r\n                            <div className='back-button-container' style={{\"height\": \"50pt\"}}><img src={Location} /></div>\r\n                            <div className='contact-info-item-title'>Full Address</div>\r\n                            <div className='contact-info-item-value-address'>{this.props.street}, {this.props.number}</div>\r\n                            <div className='contact-info-item-value-address'>{this.props.city}, {this.props.state}</div>\r\n                            <div className='contact-info-item-value-address'>{this.props.postCode}, {this.props.country}</div>\r\n                        </div>\r\n                        <div className='contact-registration-date'>Contact registered at: {this.props.registrationDate}</div>\r\n                    </div>\r\n                    <div className='contact-info-bottom-gradient'></div>\r\n                    <div className='contact-info-top-gradient'></div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactInfo;","export default __webpack_public_path__ + \"static/media/close.ca92fef7.svg\";","import React from 'react';\r\nimport './Search.css';\r\nimport Close from '../svg/close.svg';\r\nimport SearchIcon from '../svg/search_selected.svg';\r\nimport ContactListItem from './ContactListItem';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nclass Search extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            clearList: false,\r\n            showSearch: false,\r\n        }\r\n        this.passClickedSearchResult = this.passClickedSearchResult.bind(this);\r\n        this.closeSearch = this.closeSearch.bind(this);\r\n    }\r\n    passClickedSearchResult(result) {\r\n        this.props.onContactClicked(result.Letter, result.Index);\r\n        this.closeSearch();\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.setState({showSearch: true});\r\n        }, 200);\r\n    }\r\n    closeSearch() {\r\n        this.setState({showSearch: false});\r\n        this.props.onHideSearch();\r\n    }\r\n    render() {\r\n        return(\r\n            <CSSTransition in={this.state.showSearch}\r\n                apper={true}\r\n                timeout={800}\r\n                classNames='search-animation'\r\n                unmountOnExit\r\n            >\r\n                <div className='search-container'>\r\n                    <div className='search-bar-container'>\r\n                        \r\n                        <div className='search-bar-button-container' onClick={this.closeSearch}>\r\n                            <img src={Close} />\r\n                        </div>\r\n                        <div className='search-bar-button-container' style={{'opacity':'1', 'float':'left', 'width': '60pt'}}>\r\n                            <img src={SearchIcon} />\r\n                        </div>\r\n                        <input type='text' placeholder=\"Contact name\" onChange={this.props.onSearch} />\r\n                    </div>\r\n                    <div className='search-bar-separation-bar'></div>\r\n                    <div className='search-results-container'>\r\n                        {this.state.clearList? undefined : this.props.foundContacts.map((result, idx) => { return <ContactListItem onClick={() =>this.passClickedSearchResult(result)} index={idx} contactPhoto={result.Contact.picture.medium} firstName={result.Contact.name.first} lastName={result.Contact.name.last}/>}) }\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","export default __webpack_public_path__ + \"static/media/logo_splash.73b2f425.svg\";","export default __webpack_public_path__ + \"static/media/loader_splash.fb826bd4.svg\";","import React from 'react';\r\nimport './SplashScreen.css';\r\nimport LogoSplash from '../svg/logo_splash.svg';\r\nimport Loader from '../svg/loader_splash.svg';\r\nclass SplashScreen extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            contentExit: false,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.setState({contentExit: true})\r\n        }, 4000);\r\n    }\r\n    render() {\r\n        return(\r\n            <div className='splash-screen-container splash-screen-container-exit'>\r\n                <div className='splash-screen-main splash-screen-main-exit '>\r\n                        <img src={LogoSplash} className={this.state.contentExit ? 'splash-screen-logo-container splash-screen-logo-container-enter splash-screen-exit' : 'splash-screen-logo-container splash-screen-logo-container-enter'}/>\r\n                </div>\r\n                    <img src={Loader} className={this.state.contentExit ? 'splash-loader splash-screen-logo-container-enter splash-screen-exit':'splash-loader splash-screen-logo-container-enter'}/>\r\n                <div  className={this.state.contentExit ? 'powered-container  splash-screen-logo-container-enter splash-screen-exit' : 'powered-container  splash-screen-logo-container-enter'}>\r\n                    powered by <h>randomuser.me</h>\r\n                </div>\r\n               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SplashScreen;","export default __webpack_public_path__ + \"static/media/account-alert.c6f76180.svg\";","import React from 'react';\r\nimport './ContactListEmptyState.css';\r\n\r\nimport NoContactFound from '../svg/account-alert.svg';\r\n\r\nclass ContactListEmptyState extends React.Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        return(\r\n            <div className='empty-state-container empty-state-enter '>\r\n                <div className='empty-state-message-container'>\r\n                    <img src={NoContactFound} />\r\n                    <div className='empty-state-message'>No contact register with this initial.</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ContactListEmptyState;","import React from 'react';\r\nimport './Info.css';\r\nimport InfoIcon from '../svg/info.svg';\r\nimport Close from '../svg/close.svg';\r\nimport LogoSplash from '../svg/logo_splash.svg';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nclass Info extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isMounted: false\r\n        }\r\n        this.closeInfo = this.closeInfo.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.setState({isMounted: true});\r\n    }\r\n    closeInfo() {\r\n        this.setState({isMounted: false});\r\n        this.props.hideInfo();\r\n    }\r\n    render() {\r\n        return(\r\n            <CSSTransition in={this.state.isMounted}\r\n                apper={true}\r\n                timeout={800}\r\n                classNames='info-animation'\r\n                unmountOnExit\r\n            >\r\n                <div className='info-container'>\r\n                    <div className='info-icon-container'><img src={InfoIcon} /></div>\r\n                    <div className='info-close-container'><img src={Close} onClick={this.closeInfo}/></div>\r\n                    <img src={LogoSplash} className='info-logo'/>\r\n                    <div className='info-text-container'>\r\n                        Valtech people is an application designed to be a user interface for the randomuser.me public API. Similarities between persons or locations are purely coincidental. \r\n                        <div>\r\n                            <h>Version 0.1</h>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default Info;","import React from 'react';\r\nimport './TypeFaces.css';\r\nimport ContactFetcher from './ContactsFetcher';\r\nimport LogoBar from './LogoBar';\r\nimport TabList from './TabList';\r\nimport NavBar from './NavBar';\r\nimport ContactList from './ContactList';\r\nimport ContactInfo from './ContactInfo';\r\nimport Search from './Search';\r\nimport stringSimilarity from \"string-similarity\";\r\nimport SplashScreen from './SplashScreen';\r\nimport ContactListEmptyState from './ContactListEmptyState';\r\nimport Info from './Info'\r\n\r\nclass Main extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            contacts: undefined,\r\n            selectedLetter: \"a\",\r\n            showContactInfo: false,\r\n            selectedPersonPhoto: undefined,\r\n            selectedPersonFirstName: \"\",\r\n            selectedPersonLastName: \"\",\r\n            selectedPersonPhoneNumber: \"\",\r\n            selectedPersonPhoneEmail: \"\",\r\n            selectedPersonGender: \"\",\r\n            selectedPersonAge: 0,\r\n            selectedPersonDOB: \"\",\r\n            selectedPersonStreet: \"\",\r\n            selectedPersonNumber: 0,\r\n            selectedPersonCity: \"\",\r\n            selectedPersonState: \"\",\r\n            selectedPersonPostCode: \"\",\r\n            selectedPersonCountry: \"\",\r\n            selectedPersonRegistrationDate: \"\",\r\n            searchResults: [],\r\n            showSearch: false,\r\n            hideSplashScreen: false,\r\n            showEmptyState: false,\r\n            showInfo: false,\r\n        }\r\n        this.ContactFetcher = React.createRef();\r\n        this.NavBar = React.createRef();\r\n        this.ContactList = React.createRef();\r\n        this.ContactInfo = React.createRef();\r\n        this.Search = React.createRef();\r\n        this.setSelectedLetter = this.setSelectedLetter.bind(this);\r\n        this.showContactInfo = this.showContactInfo.bind(this);\r\n        this.closeContactInfo = this.closeContactInfo.bind(this);\r\n        this.performSearch = this.performSearch.bind(this);\r\n        this.showSearchResult = this.showSearchResult.bind(this);\r\n        this.showSearch = this.showSearch.bind(this);\r\n        this.closeSearch = this.closeSearch.bind(this);\r\n        this.finishSplashScreen = this.finishSplashScreen.bind(this);\r\n        this.showEmptyState = this.showEmptyState.bind(this);\r\n        this.hideEmptyState = this.hideEmptyState.bind(this);\r\n        this.hideInfo = this.hideInfo.bind(this);\r\n        this.showInfo = this.showInfo.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.ContactFetcher.current.fetchContacts().then((response) => {\r\n            this.setState({contacts: response});\r\n            this.NavBar.current.setSelectedLetter('A', this.state.contacts['a'].length);\r\n            this.ContactList.current.receiveContacts(this.state.contacts['a']);\r\n        });\r\n        this.finishSplashScreen();\r\n    }\r\n    showEmptyState() {\r\n        this.setState({showEmptyState: true});\r\n    }\r\n    hideEmptyState() {\r\n        this.setState({showEmptyState: false});\r\n    }\r\n    finishSplashScreen() {\r\n        setTimeout(() => {\r\n            this.setState({hideSplashScreen: true});\r\n        }, 6000);\r\n    }\r\n    setSelectedLetter(letter) {\r\n        this.setState({selectedLetter: letter.toLowerCase()});\r\n        this.NavBar.current.setSelectedLetter(letter, this.state.contacts[letter.toLowerCase()].length);\r\n        if(this.state.contacts[letter.toLowerCase()].length == 0) {\r\n            this.showEmptyState();\r\n        } else {\r\n            this.hideEmptyState();\r\n            this.ContactList.current.receiveContacts(this.state.contacts[letter.toLowerCase()]);\r\n        }\r\n        \r\n    }\r\n    showContactInfo(index) {\r\n        let person = this.state.contacts[this.state.selectedLetter][index];\r\n        this.setState({selectedPersonPhoto: person.picture.large})\r\n        this.setState({selectedPersonFirstName: person.name.first})\r\n        this.setState({selectedPersonLastName: person.name.last})\r\n        this.setState({selectedPersonPhoneNumber: person.phone})\r\n        this.setState({selectedPersonPhoneEmail: person.email})\r\n        this.setState({selectedPersonGender: person.gender})\r\n        this.setState({selectedPersonAge: person.dob.age})\r\n        this.setState({selectedPersonDOB: person.dob.date.split(\"T\")[0]})\r\n        this.setState({selectedPersonStreet: person.location.street.name})\r\n        this.setState({selectedPersonNumber: person.location.street.number})\r\n        this.setState({selectedPersonCity: person.location.city})\r\n        this.setState({selectedPersonState: person.location.state})\r\n        this.setState({selectedPersonPostCode: person.location.postcode})\r\n        this.setState({selectedPersonCountry: person.location.country})\r\n        this.setState({selectedPersonRegistrationDate: person.registered.date.split(\"T\")[0]})\r\n        this.setState({showContactInfo: true});\r\n    }\r\n    closeContactInfo() {\r\n        setTimeout(() => {\r\n            this.setState({showContactInfo: false});\r\n        }, 300);        \r\n    }\r\n    showSearch() {\r\n        this.setState({showSearch: true});\r\n    }\r\n    closeSearch() {\r\n        setTimeout(() => {\r\n            this.setState({showSearch: false});\r\n              let contactsFound = [];\r\n            this.setState({searchResults: contactsFound}); \r\n        }, 100);        \r\n    }\r\n    performSearch(e) {\r\n        let contactList = this.state.contacts;\r\n        let contactsFound = [];\r\n        for(const [letter, contacts] of Object.entries(contactList)) {\r\n            for(const [index, contact] of Object.entries(contacts)) {\r\n                let lastNameMatch = stringSimilarity.compareTwoStrings(contact.name.last.toLowerCase(), e.target.value.toLowerCase());\r\n                let firstNameMatch = stringSimilarity.compareTwoStrings(contact.name.first.toLowerCase(), e.target.value.toLowerCase());\r\n                if(lastNameMatch >= 0.6) {\r\n                    contactsFound.push({Letter: letter, Index: index, Contact: contact});\r\n                }\r\n                if(firstNameMatch >= 0.6) {\r\n                    contactsFound.push({Letter: letter, Index: index, Contact: contact});\r\n                }\r\n            }\r\n        }\r\n        this.setState({searchResults: contactsFound});        \r\n    }\r\n    showSearchResult(letter, index) {\r\n        this.setState({selectedLetter: letter}, function() {\r\n            this.showContactInfo(index)\r\n        })\r\n    }\r\n    hideInfo() {\r\n        setTimeout(() => {\r\n            this.setState({showInfo: false})\r\n        }, 500);\r\n    }\r\n    showInfo() {\r\n        this.setState({showInfo: true})\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <ContactFetcher ref={this.ContactFetcher} />\r\n                <LogoBar onInfoButtonClick={this.showInfo}/>\r\n                <TabList onLetterSelect={this.setSelectedLetter} />\r\n                <NavBar ref={this.NavBar} showSearch={this.showSearch}/>\r\n                <ContactList ref={this.ContactList} onContactClicked={this.showContactInfo}/>\r\n                {this.state.showEmptyState ? <ContactListEmptyState /> : undefined}\r\n                {this.state.showContactInfo ? <ContactInfo ref={this.ContactInfo} \r\n                                                picture={this.state.selectedPersonPhoto}\r\n                                                firstName={this.state.selectedPersonFirstName}\r\n                                                lastName={this.state.selectedPersonLastName}\r\n                                                phone={this.state.selectedPersonPhoneNumber}\r\n                                                email={this.state.selectedPersonPhoneEmail}\r\n                                                gender={this.state.selectedPersonGender}\r\n                                                age={this.state.selectedPersonAge}\r\n                                                dob={this.state.selectedPersonDOB}\r\n                                                street={this.state.selectedPersonStreet}\r\n                                                number={this.state.selectedPersonNumber}\r\n                                                city={this.state.selectedPersonCity}\r\n                                                state={this.state.selectedPersonState}\r\n                                                postCode={this.state.selectedPersonPostCode}\r\n                                                country={this.state.selectedPersonCountry}\r\n                                                registrationDate={this.state.selectedPersonRegistrationDate}\r\n                                                hideContactInfo={this.closeContactInfo}\r\n                                                /> : undefined}\r\n                {this.state.showSearch ? <Search ref={this.Search} onSearch={this.performSearch} foundContacts={this.state.searchResults} onContactClicked={this.showSearchResult} onHideSearch={this.closeSearch}/> : undefined }\r\n                {this.state.hideSplashScreen ? undefined : <SplashScreen /> }\r\n                {this.state.showInfo ? <Info hideInfo={this.hideInfo}/> : undefined }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import logo from './logo.svg';\nimport './App.css';\n\nimport Main from './components/Main.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}