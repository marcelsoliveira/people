{"version":3,"sources":["logo.svg","components/ContactsFetcher.js","svg/logo_vertical.svg","svg/info.svg","components/LogoBar.js","components/TabListItem.js","components/TabList.js","svg/search_selected.svg","components/NavBar.js","svg/chevron-right.svg","components/ContactListItem.js","svg/loader.svg","components/ContactList.js","svg/chevron-left.svg","svg/phone-classic.svg","svg/phone.svg","svg/email.svg","svg/person.svg","svg/age.svg","svg/dob.svg","svg/location.svg","svg/share_contact.svg","components/ContactInfo.js","svg/close.svg","components/Search.js","svg/logo_splash.svg","svg/loader_splash.svg","components/SplashScreen.js","svg/account-alert.svg","components/ContactListEmptyState.js","components/Info.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["ContactFetcher","state","serverResponse","fetchContacts","bind","processContacts","packContacts","a","queryUrl","Configuration","userUrl","fullQuery","numberCards","toString","axios","get","then","response","data","results","catch","error","this","contacts","sort","b","compareLastNames","name","last","sortedContacts","packedContacts","tabs","forEach","tab","contact","toLowerCase","push","splice","length","React","Component","LogoBar","className","onClick","props","onInfoButtonClick","src","Info","VerticalLogo","TabListItem","isSelected","unselectTab","selectTab","tabText","setState","onclick","TabList","unselectTabs","map","ref","createRef","selectedTab","onLetterSelect","current","toUpperCase","NavBar","selectedLetter","contactCount","undefined","letter","showSearch","SearchSelected","ContactListItem","isMounted","onClickEventHandler","index","setTimeout","CSSTransition","in","apper","timeout","classNames","unmountOnExit","contactPhoto","firstName","lastName","ChevronRight","ContactList","contactsList","contactsLoaded","receiveContacts","console","log","Loader","idx","onContactClicked","picture","medium","first","ContactInfo","showContactInfo","contactImage","closeContactInfo","shareContact","convertImageToBase64","createShareLink","callContact","window","open","phone","hideContactInfo","vCard","require","vCardsJS","photo","embedFromString","workPhone","birthday","Date","dob","email","homeAddress","street","number","city","postCode","country","vCardData","uri","getFormattedString","downloadLink","document","createElement","href","download","body","appendChild","click","removeChild","ChevronLeft","style","ShareContact","Call","Phone","Email","Person","gender","Age","age","DateOfBirth","Location","registrationDate","Search","clearList","passClickedSearchResult","closeSearch","result","Letter","Index","onHideSearch","Close","SearchIcon","type","placeholder","onChange","onSearch","foundContacts","Contact","SplashScreen","contentExit","LogoSplash","ContactListEmptyState","NoContactFound","closeInfo","hideInfo","InfoIcon","Main","selectedPersonPhoto","selectedPersonFirstName","selectedPersonLastName","selectedPersonPhoneNumber","selectedPersonPhoneEmail","selectedPersonGender","selectedPersonAge","selectedPersonDOB","selectedPersonStreet","selectedPersonNumber","selectedPersonCity","selectedPersonState","selectedPersonPostCode","selectedPersonCountry","selectedPersonRegistrationDate","searchResults","hideSplashScreen","showEmptyState","showInfo","setSelectedLetter","performSearch","showSearchResult","finishSplashScreen","hideEmptyState","person","large","date","split","location","postcode","registered","e","contactList","contactsFound","Object","entries","lastNameMatch","stringSimilarity","compareTwoStrings","target","value","firstNameMatch","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.22dcb69c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport axios from \"axios\";\nimport Configuration from './configuration.json'\n\nclass ContactFetcher extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            serverResponse: null,\n        }\n        this.fetchContacts = this.fetchContacts.bind(this);\n        this.processContacts = this.processContacts.bind(this);\n        this.packContacts = this.packContacts.bind(this);\n    }\n    async fetchContacts() {\n        let queryUrl = Configuration.userUrl + \"/api/?nat=au,br,ca,ch,de,dk,es,fi,fr,gb,ie,nl,nz,us&results=\";\n        let fullQuery = queryUrl + Configuration.numberCards.toString();\n        await axios.get(fullQuery).then((response) => {this.state.serverResponse = this.processContacts(response.data.results)}).catch((error) => {this.state.serverResponse = error});\n        return this.state.serverResponse;\n    }\n    processContacts(contacts) {    \n        return this.packContacts(contacts.sort(function(a, b) {\n            function compareLastNames(a, b) {           \n                return (a < b) ? -1 : (a > b) ? 1 : 0;\n            }\n            return compareLastNames(a.name.last, b.name.last);\n        }));\n    }\n    packContacts(sortedContacts) {\n        let packedContacts = [];\n        Configuration.tabs.forEach((tab) => {\n            packedContacts[tab] = []\n            sortedContacts.forEach((contact) => {\n                if(contact.name.last.toLowerCase()[0] === tab) {\n                    packedContacts[tab].push(contact)\n                }\n            });\n            sortedContacts.splice(0,packedContacts[tab].length)\n        });\n        return packedContacts;\n    }\n    render() {\n        return null;\n    }\n}\n\nexport default ContactFetcher;","export default __webpack_public_path__ + \"static/media/logo_vertical.cc9f62be.svg\";","export default __webpack_public_path__ + \"static/media/info.bd4c8878.svg\";","import React from 'react';\nimport './LogoBar.css';\nimport VerticalLogo from '../svg/logo_vertical.svg'\nimport Info from '../svg/info.svg';\n\nclass LogoBar extends React.Component {\n    constructor() {\n        super();\n    }\n    render() {\n        return(\n            <div className='logo-bar-container'>\n                <div className='logo-bar-button-container' onClick={this.props.onInfoButtonClick}><img src={Info} /></div>\n                <img src={VerticalLogo} className='vertical-logo'/>\n            </div>\n        );\n    }\n}\n\nexport default LogoBar;","import React from 'react';\nimport './TabListItem.css';\n\nclass TabListItem extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isSelected: false,\n        }\n        this.unselectTab = this.unselectTab.bind(this);\n        this.selectTab = this.selectTab.bind(this);\n    }\n    componentDidMount() {\n        if(this.props.tabText == 'A') {\n            this.selectTab();\n        }\n    }\n    unselectTab() {\n        this.setState({isSelected: false})\n    }\n    selectTab() {\n        this.setState({isSelected: true})\n    }\n    render() {\n        return(\n            <div className='tab-list-item' onClick={() => {this.props.onclick(this.props.tabText); this.selectTab()}}>\n                <div className={this.state.isSelected ? 'tab-list-item-ring-selected' : 'tab-list-item-ring'}></div>\n                <h1 className={this.state.isSelected ? 'tab-list-item-h1-selected' : 'tab-list-item-h1-unselected'}>{this.props.tabText}</h1>\n            </div>\n        );\n    }\n}\nexport default TabListItem;","import React from 'react';\nimport './TabList.css';\nimport TabListItem from './TabListItem';\nimport Configuration from './configuration.json'\n\nclass TabList extends React.Component {\n    constructor() {\n        super();\n        this.unselectTabs = this.unselectTabs.bind(this);\n        this.tabs = []\n        Configuration.tabs.map((tab) => {\n            this.tabs.push({tabText: tab, ref: React.createRef()});\n        });\n    }\n    unselectTabs(selectedTab) {\n        this.props.onLetterSelect(selectedTab);\n        this.tabs.map((tab) => {\n            tab.ref.current.unselectTab();\n        });\n    }\n    render() {\n        return(\n            <div className='tab-list-container'>\n                <div className='top-gradient'></div>\n                    { this.tabs.map((tab) => { return <TabListItem ref={tab.ref} tabText={tab.tabText.toUpperCase()} onclick={this.unselectTabs.bind(this)}/>}) }\n                <div className='bottom-gradient'></div>\n            </div>\n        );\n    }\n}\n\nexport default TabList;","export default __webpack_public_path__ + \"static/media/search_selected.fa9c8156.svg\";","import React from 'react';\nimport './NavBar.css';\nimport SearchSelected from '../svg/search_selected.svg';\n\nclass NavBar extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedLetter: \"\",\n            contactCount: undefined,\n        };\n    }\n    setSelectedLetter(letter, contacts) {\n        this.setState({selectedLetter: letter.toUpperCase()+letter.toLowerCase()})\n        this.setState({contactCount: contacts})\n    }\n    render() {\n        return(\n            <div className='nav-bar-container'>\n                <div className='nav-bar-selected-character'>{this.state.selectedLetter}</div>\n                <div className='nav-bar-contact-counter'>{this.state.contactCount}</div>\n                <div className='nav-bat-button-container' onClick={this.props.showSearch}><img src={SearchSelected} /></div>\n                <div className='separation-bar'></div>\n            </div>\n        );\n    }\n}\n\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/chevron-right.5390ea80.svg\";","import React from 'react';\nimport './ContactListItem.css';\nimport ChevronRight from '../svg/chevron-right.svg';\nimport { CSSTransition } from 'react-transition-group';\n\nclass ContactListItem extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isMounted: false,\n        }\n        this.onClickEventHandler = this.onClickEventHandler.bind(this);\n    }\n    onClickEventHandler() {\n        this.props.onClick(this.props.index)\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({isMounted: true})\n        }, 100);\n    }\n    render() {\n        return(\n            <CSSTransition in={this.state.isMounted}\n                apper={true}\n                timeout={800}\n                classNames='contact-list-item-animation'\n                unmountOnExit\n            >\n                <div className='contact-list-item-container' onClick={this.onClickEventHandler}>\n                    <div className='contact-list-item-container-user-photo-container'>\n                        <img src={this.props.contactPhoto} />\n                    </div>\n                    <div className='contact-list-item-user-name'><p>{this.props.firstName}</p><p>{this.props.lastName}</p></div>\n                    <div className='contact-list-item-container-chevron-container'>\n                        <img src={ChevronRight} />\n                    </div>\n                    <div className='divider'></div>\n                </div>\n            </CSSTransition>\n            \n        );\n    }\n}\n\nexport default ContactListItem;","export default __webpack_public_path__ + \"static/media/loader.c5aba0fa.svg\";","import React from 'react';\nimport './ContactList.css';\nimport ContactListItem from './ContactListItem';\nimport Loader from '../svg/loader.svg';\n\nclass ContactList extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            contactsList: [],\n            contactsLoaded: false,\n        }\n        this.receiveContacts = this.receiveContacts.bind(this);\n    }\n    receiveContacts(contacts) {\n        console.log(contacts)\n        this.setState({contactsLoaded: false});\n        this.setState({contactsList: []});\n        setTimeout(() => {\n            this.setState({contactsList: contacts});\n            this.setState({contactsLoaded: true});\n        }, 800);\n    }\n    render() {\n        return(\n            <div>\n                <div className='contact-list-top-gradient'></div>\n                <img src={Loader} className={this.state.contactsLoaded ? 'loader loader-fade' : 'loader'}/>\n                <div className='contact-list-container'>\n                    { this.state.contactsList.map((contact, idx) => { return <ContactListItem onClick={this.props.onContactClicked} index={idx} contactPhoto={contact.picture.medium} firstName={contact.name.first} lastName={contact.name.last}/>}) }\n                </div>\n                <div className='contact-list-bottom-gradient'></div>\n            </div>\n            \n        );\n    }\n}\n\nexport default ContactList;","export default __webpack_public_path__ + \"static/media/chevron-left.c7c5682c.svg\";","export default __webpack_public_path__ + \"static/media/phone-classic.6b1139f0.svg\";","export default __webpack_public_path__ + \"static/media/phone.9774a2d5.svg\";","export default __webpack_public_path__ + \"static/media/email.30b849c3.svg\";","export default __webpack_public_path__ + \"static/media/person.c2afbeec.svg\";","export default __webpack_public_path__ + \"static/media/age.d38a42d7.svg\";","export default __webpack_public_path__ + \"static/media/dob.565ef536.svg\";","export default __webpack_public_path__ + \"static/media/location.2a13b3b4.svg\";","export default __webpack_public_path__ + \"static/media/share_contact.5957181d.svg\";","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './ContactInfo.css';\nimport ChevronLeft from '../svg/chevron-left.svg';\nimport Phone from '../svg/phone-classic.svg';\nimport Call from '../svg/phone.svg';\nimport Email from '../svg/email.svg';\nimport Person from '../svg/person.svg';\nimport Age from '../svg/age.svg'\nimport DateOfBirth from '../svg/dob.svg';\nimport Location from '../svg/location.svg'\nimport ShareContact from '../svg/share_contact.svg';\n\nclass ContactInfo extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            showContactInfo: false,\n            contactPhoto: null\n\n        }\n        this.contactImage = React.createRef();\n        this.closeContactInfo = this.closeContactInfo.bind(this);\n        this.shareContact = this.shareContact.bind(this);\n        this.convertImageToBase64 = this.convertImageToBase64.bind(this);\n        this.createShareLink = this.createShareLink.bind(this);\n        this.callContact = this.callContact.bind(this);\n    }\n    callContact() {\n        window.open('tel:' + this.props.phone);\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({showContactInfo: true});\n            this.convertImageToBase64();\n        }, 300);\n        \n    }\n    closeContactInfo() {\n        this.setState({showContactInfo: false});\n        this.props.hideContactInfo();\n    }\n    shareContact() {\n        let vCardsJS = require('vcards-js');\n        let vCard = vCardsJS();\n        vCard.firstName = this.props.firstName;\n        vCard.lastName = this.props.lastName;\n        vCard.photo.embedFromString(this.state.contactPhoto, 'JPEG');\n        vCard.workPhone = this.props.phone;\n        vCard.birthday = new Date(this.props.dob);\n        vCard.email = this.props.email\n        vCard.homeAddress = this.props.street + \" \" + this.props.number + \" \" + this.props.city + \" \" + this.props.state + \" \" + this.props.postCode + \" \" + this.props.country;\n        this.createShareLink(vCard);\n    }\n    createShareLink(vCardData) {\n        var str = vCardData.getFormattedString();\n        var uri = 'data:text/x-vcard;urlencoded,' + str;\n        var downloadLink = document.createElement(\"a\");\n        downloadLink.href = uri;\n        downloadLink.download = this.props.firstName + \"_\" + this.props.lastName + \".vcf\";\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n    }\n    convertImageToBase64() {\n      //pass\n    }\n    render() {\n        return (\n            <CSSTransition in={this.state.showContactInfo}\n                apper={true}\n                timeout={800}\n                classNames='contact-info-animation'\n                unmountOnExit\n            >\n                <div className='contact-info-container'>\n                    <div className='contact-info-nav-bar'>\n                        <div className='back-button-container' onClick={this.closeContactInfo}><img src={ChevronLeft} /></div>\n                        <div className='back-button-container' style={{\"float\": \"right\"}} onClick={this.shareContact}><img src={ShareContact} /></div>\n                        <div className='back-button-container' style={{\"float\": \"right\"}} onClick={this.callContact}><img src={Call} /></div>\n                        <div className='contact-foto-and-name-container'>\n                            <div className='contact-info-foto-container '><img ref={this.contactImage} src={this.props.picture} /></div>\n                            <div className='contact-info-item-user-name'><p>{this.props.firstName}</p><p>{this.props.lastName}</p></div>\n                        </div>\n                    </div>\n                    <div className='contact-info-data-container'>\n                        <div className='contact-info-secion-title contact-title-enter'>Contact</div>\n                        <div className='contact-info-item-container phone-number-enter'>\n                            <div className='back-button-container' style={{\"height\": \"50pt\"}}><img src={Phone} /></div>\n                            <div className='contact-info-item-title'>Phone number</div>\n                            <div className='contact-info-item-value'>{this.props.phone}</div>\n                            <div className='contact-info-item-divider'></div>\n                        </div>\n                        <div className='contact-info-item-container email-number-enter'>\n                            <div className='back-button-container' style={{\"height\": \"50pt\"}}><img src={Email} /></div>\n                            <div className='contact-info-item-title'>Email</div>\n                            <div className='contact-info-item-value'>{this.props.email}</div>\n                            <div className='contact-info-item-divider'></div>\n                        </div>\n                        <div className='contact-info-secion-title personal-enter'>Personal information</div>\n                        <div className='contact-info-item-container gender-enter'>\n                            <div className='back-button-container' style={{\"height\": \"50pt\"}}><img src={Person} /></div>\n                            <div className='contact-info-item-title'>Gender</div>\n                            <div className='contact-info-item-value'>{this.props.gender}</div>\n                            <div className='contact-info-item-divider'></div>\n                        </div>\n                        <div className='contact-info-item-container age-enter'>\n                            <div className='back-button-container' style={{\"height\": \"50pt\"}}><img src={Age} /></div>\n                            <div className='contact-info-item-title'>Age</div>\n                            <div className='contact-info-item-value'>{this.props.age}</div>\n                            <div className='contact-info-item-divider'></div>\n                        </div>\n                        <div className='contact-info-item-container dob-enter'>\n                            <div className='back-button-container' style={{\"height\": \"50pt\"}}><img src={DateOfBirth} /></div>\n                            <div className='contact-info-item-title'>Date of birth</div>\n                            <div className='contact-info-item-value'>{this.props.dob}</div>\n                            <div className='contact-info-item-divider'></div>\n                        </div>\n                        <div className='contact-info-secion-title location-enter'>Address</div>\n                        <div className='contact-info-item-container address-enter'>\n                            <div className='back-button-container' style={{\"height\": \"50pt\"}}><img src={Location} /></div>\n                            <div className='contact-info-item-title'>Full Address</div>\n                            <div className='contact-info-item-value-address'>{this.props.street}, {this.props.number}</div>\n                            <div className='contact-info-item-value-address'>{this.props.city}, {this.props.state}</div>\n                            <div className='contact-info-item-value-address'>{this.props.postCode}, {this.props.country}</div>\n                        </div>\n                        <div className='contact-registration-date'>Contact registered at: {this.props.registrationDate}</div>\n                    </div>\n                    <div className='contact-info-bottom-gradient'></div>\n                    <div className='contact-info-top-gradient'></div>\n                </div>\n            </CSSTransition>\n        );\n    }\n}\n\nexport default ContactInfo;","export default __webpack_public_path__ + \"static/media/close.ca92fef7.svg\";","import React from 'react';\nimport './Search.css';\nimport Close from '../svg/close.svg';\nimport SearchIcon from '../svg/search_selected.svg';\nimport ContactListItem from './ContactListItem';\nimport { CSSTransition } from 'react-transition-group';\n\nclass Search extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            clearList: false,\n            showSearch: false,\n        }\n        this.passClickedSearchResult = this.passClickedSearchResult.bind(this);\n        this.closeSearch = this.closeSearch.bind(this);\n    }\n    passClickedSearchResult(result) {\n        this.props.onContactClicked(result.Letter, result.Index);\n        this.closeSearch();\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({showSearch: true});\n        }, 200);\n    }\n    closeSearch() {\n        this.setState({showSearch: false});\n        this.props.onHideSearch();\n    }\n    render() {\n        return(\n            <CSSTransition in={this.state.showSearch}\n                apper={true}\n                timeout={800}\n                classNames='search-animation'\n                unmountOnExit\n            >\n                <div className='search-container'>\n                    <div className='search-bar-container'>\n                        \n                        <div className='search-bar-button-container' onClick={this.closeSearch}>\n                            <img src={Close} />\n                        </div>\n                        <div className='search-bar-button-container' style={{'opacity':'1', 'float':'left', 'width': '60pt'}}>\n                            <img src={SearchIcon} />\n                        </div>\n                        <input type='text' placeholder=\"Contact name\" onChange={this.props.onSearch} />\n                    </div>\n                    <div className='search-bar-separation-bar'></div>\n                    <div className='search-results-container'>\n                        {this.state.clearList? undefined : this.props.foundContacts.map((result, idx) => { return <ContactListItem onClick={() =>this.passClickedSearchResult(result)} index={idx} contactPhoto={result.Contact.picture.medium} firstName={result.Contact.name.first} lastName={result.Contact.name.last}/>}) }\n                    </div>\n                </div>\n            </CSSTransition>\n        );\n    }\n}\n\nexport default Search;","export default __webpack_public_path__ + \"static/media/logo_splash.73b2f425.svg\";","export default __webpack_public_path__ + \"static/media/loader_splash.fb826bd4.svg\";","import React from 'react';\nimport './SplashScreen.css';\nimport LogoSplash from '../svg/logo_splash.svg';\nimport Loader from '../svg/loader_splash.svg';\nclass SplashScreen extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            contentExit: false,\n        }\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({contentExit: true})\n        }, 4000);\n    }\n    render() {\n        return(\n            <div className='splash-screen-container splash-screen-container-exit'>\n                <div className='splash-screen-main splash-screen-main-exit '>\n                        <img src={LogoSplash} className={this.state.contentExit ? 'splash-screen-logo-container splash-screen-logo-container-enter splash-screen-exit' : 'splash-screen-logo-container splash-screen-logo-container-enter'}/>\n                </div>\n                    <img src={Loader} className={this.state.contentExit ? 'splash-loader splash-screen-logo-container-enter splash-screen-exit':'splash-loader splash-screen-logo-container-enter'}/>\n                <div  className={this.state.contentExit ? 'powered-container  splash-screen-logo-container-enter splash-screen-exit' : 'powered-container  splash-screen-logo-container-enter'}>\n                    powered by <h>randomuser.me</h>\n                </div>\n               \n            </div>\n        );\n    }\n}\n\nexport default SplashScreen;","export default __webpack_public_path__ + \"static/media/account-alert.c6f76180.svg\";","import React from 'react';\nimport './ContactListEmptyState.css';\n\nimport NoContactFound from '../svg/account-alert.svg';\n\nclass ContactListEmptyState extends React.Component {\n    constructor() {\n        super();\n    }\n    render() {\n        return(\n            <div className='empty-state-container empty-state-enter '>\n                <div className='empty-state-message-container'>\n                    <img src={NoContactFound} />\n                    <div className='empty-state-message'>No contact register with this initial.</div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default ContactListEmptyState;","import React from 'react';\nimport './Info.css';\nimport InfoIcon from '../svg/info.svg';\nimport Close from '../svg/close.svg';\nimport LogoSplash from '../svg/logo_splash.svg';\nimport { CSSTransition } from 'react-transition-group';\n\nclass Info extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isMounted: false\n        }\n        this.closeInfo = this.closeInfo.bind(this);\n    }\n    componentDidMount() {\n        this.setState({isMounted: true});\n    }\n    closeInfo() {\n        this.setState({isMounted: false});\n        this.props.hideInfo();\n    }\n    render() {\n        return(\n            <CSSTransition in={this.state.isMounted}\n                apper={true}\n                timeout={800}\n                classNames='info-animation'\n                unmountOnExit\n            >\n                <div className='info-container'>\n                    <div className='info-icon-container'><img src={InfoIcon} /></div>\n                    <div className='info-close-container'><img src={Close} onClick={this.closeInfo}/></div>\n                    <img src={LogoSplash} className='info-logo'/>\n                    <div className='info-text-container'>\n                        Valtech people is an application designed to be a user interface for the randomuser.me public API. Similarities between persons or locations are purely coincidental. \n                        <div>\n                            <h>Version 0.1</h>\n                        </div>\n                    </div>\n                </div>\n            </CSSTransition>\n            \n        );\n    }\n}\nexport default Info;","import React from 'react';\nimport './TypeFaces.css';\nimport ContactFetcher from './ContactsFetcher';\nimport LogoBar from './LogoBar';\nimport TabList from './TabList';\nimport NavBar from './NavBar';\nimport ContactList from './ContactList';\nimport ContactInfo from './ContactInfo';\nimport Search from './Search';\nimport stringSimilarity from \"string-similarity\";\nimport SplashScreen from './SplashScreen';\nimport ContactListEmptyState from './ContactListEmptyState';\nimport Info from './Info'\n\nclass Main extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            contacts: undefined,\n            selectedLetter: \"a\",\n            showContactInfo: false,\n            selectedPersonPhoto: undefined,\n            selectedPersonFirstName: \"\",\n            selectedPersonLastName: \"\",\n            selectedPersonPhoneNumber: \"\",\n            selectedPersonPhoneEmail: \"\",\n            selectedPersonGender: \"\",\n            selectedPersonAge: 0,\n            selectedPersonDOB: \"\",\n            selectedPersonStreet: \"\",\n            selectedPersonNumber: 0,\n            selectedPersonCity: \"\",\n            selectedPersonState: \"\",\n            selectedPersonPostCode: \"\",\n            selectedPersonCountry: \"\",\n            selectedPersonRegistrationDate: \"\",\n            searchResults: [],\n            showSearch: false,\n            hideSplashScreen: false,\n            showEmptyState: false,\n            showInfo: false,\n        }\n        this.ContactFetcher = React.createRef();\n        this.NavBar = React.createRef();\n        this.ContactList = React.createRef();\n        this.ContactInfo = React.createRef();\n        this.Search = React.createRef();\n        this.setSelectedLetter = this.setSelectedLetter.bind(this);\n        this.showContactInfo = this.showContactInfo.bind(this);\n        this.closeContactInfo = this.closeContactInfo.bind(this);\n        this.performSearch = this.performSearch.bind(this);\n        this.showSearchResult = this.showSearchResult.bind(this);\n        this.showSearch = this.showSearch.bind(this);\n        this.closeSearch = this.closeSearch.bind(this);\n        this.finishSplashScreen = this.finishSplashScreen.bind(this);\n        this.showEmptyState = this.showEmptyState.bind(this);\n        this.hideEmptyState = this.hideEmptyState.bind(this);\n        this.hideInfo = this.hideInfo.bind(this);\n        this.showInfo = this.showInfo.bind(this);\n    }\n    componentDidMount() {\n        this.ContactFetcher.current.fetchContacts().then((response) => {\n            this.setState({contacts: response});\n            this.NavBar.current.setSelectedLetter('A', this.state.contacts['a'].length);\n            this.ContactList.current.receiveContacts(this.state.contacts['a']);\n        });\n        this.finishSplashScreen();\n    }\n    showEmptyState() {\n        this.setState({showEmptyState: true});\n    }\n    hideEmptyState() {\n        this.setState({showEmptyState: false});\n    }\n    finishSplashScreen() {\n        setTimeout(() => {\n            this.setState({hideSplashScreen: true});\n        }, 6000);\n    }\n    setSelectedLetter(letter) {\n        this.setState({selectedLetter: letter.toLowerCase()});\n        this.NavBar.current.setSelectedLetter(letter, this.state.contacts[letter.toLowerCase()].length);\n        if(this.state.contacts[letter.toLowerCase()].length == 0) {\n            this.showEmptyState();\n        } else {\n            this.hideEmptyState();\n            this.ContactList.current.receiveContacts(this.state.contacts[letter.toLowerCase()]);\n        }\n        \n    }\n    showContactInfo(index) {\n        let person = this.state.contacts[this.state.selectedLetter][index];\n        this.setState({selectedPersonPhoto: person.picture.large})\n        this.setState({selectedPersonFirstName: person.name.first})\n        this.setState({selectedPersonLastName: person.name.last})\n        this.setState({selectedPersonPhoneNumber: person.phone})\n        this.setState({selectedPersonPhoneEmail: person.email})\n        this.setState({selectedPersonGender: person.gender})\n        this.setState({selectedPersonAge: person.dob.age})\n        this.setState({selectedPersonDOB: person.dob.date.split(\"T\")[0]})\n        this.setState({selectedPersonStreet: person.location.street.name})\n        this.setState({selectedPersonNumber: person.location.street.number})\n        this.setState({selectedPersonCity: person.location.city})\n        this.setState({selectedPersonState: person.location.state})\n        this.setState({selectedPersonPostCode: person.location.postcode})\n        this.setState({selectedPersonCountry: person.location.country})\n        this.setState({selectedPersonRegistrationDate: person.registered.date.split(\"T\")[0]})\n        this.setState({showContactInfo: true});\n    }\n    closeContactInfo() {\n        setTimeout(() => {\n            this.setState({showContactInfo: false});\n        }, 300);        \n    }\n    showSearch() {\n        this.setState({showSearch: true});\n    }\n    closeSearch() {\n        setTimeout(() => {\n            this.setState({showSearch: false});\n              let contactsFound = [];\n            this.setState({searchResults: contactsFound}); \n        }, 100);        \n    }\n    performSearch(e) {\n        let contactList = this.state.contacts;\n        let contactsFound = [];\n        for(const [letter, contacts] of Object.entries(contactList)) {\n            for(const [index, contact] of Object.entries(contacts)) {\n                let lastNameMatch = stringSimilarity.compareTwoStrings(contact.name.last.toLowerCase(), e.target.value.toLowerCase());\n                let firstNameMatch = stringSimilarity.compareTwoStrings(contact.name.first.toLowerCase(), e.target.value.toLowerCase());\n                if(lastNameMatch >= 0.6) {\n                    contactsFound.push({Letter: letter, Index: index, Contact: contact});\n                }\n                if(firstNameMatch >= 0.6) {\n                    contactsFound.push({Letter: letter, Index: index, Contact: contact});\n                }\n            }\n        }\n        this.setState({searchResults: contactsFound});        \n    }\n    showSearchResult(letter, index) {\n        this.setState({selectedLetter: letter}, function() {\n            this.showContactInfo(index)\n        })\n    }\n    hideInfo() {\n        setTimeout(() => {\n            this.setState({showInfo: false})\n        }, 500);\n    }\n    showInfo() {\n        this.setState({showInfo: true})\n    }\n    render() {\n        return(\n            <div>\n                <ContactFetcher ref={this.ContactFetcher} />\n                <LogoBar onInfoButtonClick={this.showInfo}/>\n                <TabList onLetterSelect={this.setSelectedLetter} />\n                <NavBar ref={this.NavBar} showSearch={this.showSearch}/>\n                <ContactList ref={this.ContactList} onContactClicked={this.showContactInfo}/>\n                {this.state.showEmptyState ? <ContactListEmptyState /> : undefined}\n                {this.state.showContactInfo ? <ContactInfo ref={this.ContactInfo} \n                                                picture={this.state.selectedPersonPhoto}\n                                                firstName={this.state.selectedPersonFirstName}\n                                                lastName={this.state.selectedPersonLastName}\n                                                phone={this.state.selectedPersonPhoneNumber}\n                                                email={this.state.selectedPersonPhoneEmail}\n                                                gender={this.state.selectedPersonGender}\n                                                age={this.state.selectedPersonAge}\n                                                dob={this.state.selectedPersonDOB}\n                                                street={this.state.selectedPersonStreet}\n                                                number={this.state.selectedPersonNumber}\n                                                city={this.state.selectedPersonCity}\n                                                state={this.state.selectedPersonState}\n                                                postCode={this.state.selectedPersonPostCode}\n                                                country={this.state.selectedPersonCountry}\n                                                registrationDate={this.state.selectedPersonRegistrationDate}\n                                                hideContactInfo={this.closeContactInfo}\n                                                /> : undefined}\n                {this.state.showSearch ? <Search ref={this.Search} onSearch={this.performSearch} foundContacts={this.state.searchResults} onContactClicked={this.showSearchResult} onHideSearch={this.closeSearch}/> : undefined }\n                {this.state.hideSplashScreen ? undefined : <SplashScreen /> }\n                {this.state.showInfo ? <Info hideInfo={this.hideInfo}/> : undefined }\n            </div>\n        );\n    }\n}\n\nexport default Main;","import logo from './logo.svg';\nimport './App.css';\n\nimport Main from './components/Main.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}